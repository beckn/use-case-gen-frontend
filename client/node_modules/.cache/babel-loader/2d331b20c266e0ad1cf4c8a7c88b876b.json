{"ast":null,"code":"var _jsxFileName = \"/Users/tanyakemkar/Desktop/use-case-gen-frontend/client/src/pages/Graph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useMemo } from 'react';\nimport { Context } from '../Store';\nimport ReactFlow from 'react-flow-renderer';\nimport Button from '@material-ui/core/Button';\nimport { useHistory } from \"react-router-dom\";\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nimport InfoBox from '../component/InfoBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst orderby = [\"search\", \"on_search\", \"select\", \"on_select\", \"init\", \"on_init\", \"confirm\", \"on_confirm\", \"status\", \"on_status\", \"track\", \"on_track\", \"update\", \"on_update\", \"cancel\", \"on_cancel\", \"rating\", \"on_rating\", \"support\", \"on_support\"];\nconst newOrder = [\"search\", \"on_search\", \"select\", \"on_select\", \"init\", \"on_init\", \"confirm\", \"on_confirm\", [[\"status\", \"on_status\"], [\"track\", \"on_track\"], [\"update\", \"on_update\"], [\"cancel\", \"on_cancel\"], [\"rating\", \"on_rating\"], [\"support\", \"on_support\"]]];\nconst greenClr = [\"on_search\", \"search\"];\nconst blueClr = [\"select\", \"on_select\", \"init\", \"on_init\", \"confirm\", \"on_confirm\"];\nconst redClr = [\"status\", \"on_status\", \"track\", \"on_track\", \"update\", \"on_update\", \"cancel\", \"on_cancel\"];\nconst grayClr = [\"rating\", \"on_rating\", \"support\", \"on_support\"];\nexport default function Graph() {\n  _s();\n\n  let history = useHistory();\n  const [state, setState] = useContext(Context);\n  const [graphData, setgraphData] = useState([]);\n  const [iKey, setiKey] = useState(0);\n  useEffect(() => {\n    setiKey(iKey + 1);\n  }, [graphData]);\n\n  const makeDataForAlgo = (x1data = { ...state.apiFilterData\n  }) => {\n    console.log(1, x1data);\n    var crrData = x1data;\n    var newData = {};\n    orderby.forEach(item => {\n      newData[item] = [];\n      crrData[item].forEach(item2 => {\n        var strCr = '';\n        item2.forEach(item3 => {\n          if (item3.checked) {\n            strCr = strCr + item3.name + ',';\n          }\n        });\n\n        if (strCr !== '') {\n          strCr = strCr.slice(0, -1);\n          newData[item].push(strCr);\n        }\n\n        ;\n      });\n    });\n    console.log(newData);\n    xgenerateGraphData(newData); // setalgoData(newData);\n  };\n\n  useEffect(() => {\n    makeDataForAlgo();\n  }, []);\n\n  const colorClass = item => {\n    if (greenClr.indexOf(item) >= 0) {\n      return 'green-clr';\n    } else if (blueClr.indexOf(item) >= 0) {\n      return 'blue-clr';\n    } else if (redClr.indexOf(item) >= 0) {\n      return 'red-clr';\n    } else if (grayClr.indexOf(item) >= 0) {\n      return 'gray-clr';\n    }\n\n    return '';\n  };\n\n  const xgenerateGraphData = data => {\n    var gDataArr = [];\n    var i = 0;\n    var j = 0;\n    var x = 100;\n    var y = 5;\n    var prIdArr = [];\n    var newIdArr = [];\n\n    for (const item of newOrder) {\n      if (Array.isArray(item)) {\n        var x1 = x;\n        var y1 = y + 250;\n        var cpId = [];\n        item.forEach(aItem => {\n          if (data[aItem[0]].length > 0) {\n            data[aItem[0]].forEach(label => {\n              i++;\n              gDataArr.push({\n                nodeData: {\n                  parents: [],\n                  childrens: [],\n                  call: aItem[0],\n                  attributes: [],\n                  label: label\n                },\n                id: `${i}`,\n                className: colorClass(aItem[0]),\n                data: {\n                  label: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"label-head\",\n                      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                        className: \"box-id-text\",\n                        children: i\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 100,\n                        columnNumber: 77\n                      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                        className: \"node-item\",\n                        children: aItem[0]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 100,\n                        columnNumber: 111\n                      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                        className: \"close-end\",\n                        onClick: () => closeAction(aItem[0], label),\n                        children: \"X\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 100,\n                        columnNumber: 150\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"node-label\",\n                      children: label\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 231\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"node-tag\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"tag-box\",\n                        children: item.includes('_') ? 'BPP' : 'BAP'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 100,\n                        columnNumber: 298\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 272\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 44\n                  }, this)\n                },\n                position: {\n                  x: x,\n                  y: y\n                }\n              });\n              cpId.push(i);\n              x += 300;\n\n              if (prIdArr.length > 0) {\n                prIdArr.forEach(pId => {\n                  j++;\n                  gDataArr.push({\n                    id: 'e1-' + j,\n                    source: `${pId}`,\n                    target: `${i}`,\n                    arrowHeadType: 'arrow'\n                  });\n                });\n              }\n            });\n          }\n\n          if (data[aItem[1]].length > 0) {\n            data[aItem[1]].forEach(label => {\n              i++;\n              gDataArr.push({\n                id: `${i}`,\n                nodeData: {\n                  parents: [],\n                  childrens: [],\n                  call: aItem[1],\n                  attributes: [],\n                  label: label\n                },\n                className: colorClass(aItem[1]),\n                data: {\n                  label: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"label-head\",\n                      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                        className: \"box-id-text\",\n                        children: i\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 125,\n                        columnNumber: 77\n                      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                        className: \"node-item\",\n                        children: aItem[1]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 125,\n                        columnNumber: 111\n                      }, this), \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                        className: \"close-end\",\n                        onClick: () => closeAction(aItem[1], label),\n                        children: \"X\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 125,\n                        columnNumber: 151\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"node-label\",\n                      children: label\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 232\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"node-tag\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"tag-box\",\n                        children: aItem[1].includes('_') ? 'BPP' : 'BAP'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 125,\n                        columnNumber: 299\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 273\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 44\n                  }, this)\n                },\n                position: {\n                  x: x1,\n                  y: y1\n                }\n              });\n              x1 += 300;\n\n              if (cpId.length > 0) {\n                cpId.forEach(pId => {\n                  j++;\n                  gDataArr.push({\n                    id: 'e1-' + j,\n                    source: `${pId}`,\n                    target: `${i}`,\n                    arrowHeadType: 'arrow'\n                  });\n                });\n              } else {\n                prIdArr.forEach(pId => {\n                  j++;\n                  gDataArr.push({\n                    id: 'e1-' + j,\n                    source: `${pId}`,\n                    target: `${i}`,\n                    arrowHeadType: 'arrow'\n                  });\n                });\n              }\n            });\n          }\n\n          cpId = [];\n        });\n      } else if (data[item].length > 0) {\n        // create nodes \n        // <b className=\"close-end\" onClick={() => closeAction(i)}>X</b>\n        newIdArr = [];\n        data[item].forEach(label => {\n          i++;\n          gDataArr.push({\n            id: `${i}`,\n            nodeData: {\n              parents: [],\n              childrens: [],\n              call: item,\n              attributes: [],\n              label: label\n            },\n            className: colorClass(item),\n            data: {\n              label: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"label-head\",\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    className: \"box-id-text\",\n                    children: i\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 105\n                  }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                    className: \"node-item\",\n                    children: item\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 139\n                  }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                    className: \"close-end\",\n                    onClick: () => closeAction(item, label),\n                    children: \"X\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 174\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 77\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"node-label\",\n                  children: label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 251\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"node-tag\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"tag-box\",\n                    children: item.includes('_') ? 'BPP' : 'BAP'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 318\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 292\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 72\n              }, this)\n            },\n            position: {\n              x: x,\n              y: y\n            }\n          });\n          newIdArr.push(i);\n          x += 300;\n\n          if (prIdArr.length > 0) {\n            prIdArr.forEach(pId => {\n              j++;\n              gDataArr.push({\n                id: 'e1-' + j,\n                source: `${pId}`,\n                target: `${i}`,\n                arrowHeadType: 'arrow'\n              });\n            });\n          }\n        }); // match nodes \n\n        prIdArr = newIdArr;\n        x = 100;\n        y += 250;\n      }\n    }\n\n    setgraphData(gDataArr);\n  };\n\n  const closeAction = (key, label) => {\n    var splitStr = label.split(\",\");\n\n    for (let mainI = 0; mainI < state.apiFilterData[key].length; mainI++) {\n      var temArr = [];\n      splitStr.forEach(item2 => {\n        console.log(state.apiFilterData[key][mainI]);\n\n        for (let ci = 0; ci < state.apiFilterData[key][mainI].length; ci++) {\n          if (item2 == state.apiFilterData[key][mainI][ci].name && state.apiFilterData[key][mainI][ci].checked) {\n            temArr.push(ci);\n            break;\n          }\n        }\n      });\n\n      if (splitStr.length === temArr.length) {\n        temArr.forEach(i => {\n          state.apiFilterData[key][mainI][i].checked = false;\n        });\n        break;\n      }\n    }\n\n    setState({ ...state,\n      apiFilterData: { ...state.apiFilterData,\n        [key]: state.apiFilterData[key]\n      }\n    });\n    makeDataForAlgo({ ...state.apiFilterData\n    });\n  };\n\n  const downloadPdf = () => {\n    let userDetails = state.userInfo;\n    const input = document.getElementById('graph');\n    html2canvas(input, {\n      scale: 3\n    }).then(canvas => {\n      const imgData = canvas.toDataURL('image/png');\n      var link = document.createElement('a');\n      link.download = userDetails.user + '_' + userDetails.name_org + '_' + userDetails.name_role_timestamp + '.png';\n      link.href = imgData;\n      link.click();\n    });\n  };\n\n  const downloadJson = () => {\n    let userDetails = state.userInfo;\n    let data = [...graphData];\n    data.map(node => {\n      let isConnection = node.id.indexOf('e') !== -1;\n\n      if (isConnection) {\n        let parent = data.find(n => {\n          return n.id === node.source;\n        });\n        let child = data.find(n => {\n          return n.id === node.target;\n        });\n        child && child.nodeData.parents.push(parent.id);\n        parent && parent.nodeData.childrens.push(child.id);\n      }\n    });\n    let use_case = [];\n    data.forEach(node => {\n      if (node.id.indexOf('e') === -1) {\n        use_case.push({\n          id: node.id,\n          call: node.nodeData.call,\n          parents: node.nodeData.parents,\n          children: node.nodeData.childrens,\n          attributes: node.nodeData.label.split(','),\n          label: node.nodeData.label\n        });\n      }\n    });\n    data = {\n      participant_name: userDetails.user,\n      organisation_name: userDetails.name_org,\n      role_in_network: userDetails.name_role_timestamp,\n      use_cases: use_case\n    };\n    data = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(data));\n    var link = document.createElement('a');\n    link.download = userDetails.user + '_' + userDetails.name_org + '_' + userDetails.name_role_timestamp + '.json';\n    link.href = data;\n    link.click();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-codes\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"c-padding\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-bricks green-clr\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-text\",\n            children: \"Discovery APIs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 71\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"c-padding \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-bricks blue-clr\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-text\",\n            children: \"Order APIs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 70\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"c-padding \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-bricks red-clr\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-text\",\n            children: \"Fulfilment APIs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 69\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"c-padding \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-bricks gray-clr\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-text\",\n            children: \"Post-Fulfilment APIs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 70\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => history.goBack(),\n        children: \"back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        style: {\n          marginLeft: '10px'\n        },\n        onClick: () => history.push('/'),\n        children: \"home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        style: {\n          marginLeft: '10px'\n        },\n        onClick: downloadPdf,\n        children: \"export image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        style: {\n          marginLeft: '10px'\n        },\n        onClick: downloadJson,\n        children: \"export json\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-graph\",\n        children: \"Step 22 of 22\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"g-main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-info\",\n        children: /*#__PURE__*/_jsxDEV(InfoBox, {\n          keyName: \"graph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"graph\",\n      className: \"graph\",\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        elements: graphData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Graph, \"JkgnnkBp0xzL1F0h4bcq1s+kxCM=\", false, function () {\n  return [useHistory];\n});\n\n_c = Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"sources":["/Users/tanyakemkar/Desktop/use-case-gen-frontend/client/src/pages/Graph.js"],"names":["React","useState","useContext","useEffect","useMemo","Context","ReactFlow","Button","useHistory","html2canvas","jsPDF","InfoBox","orderby","newOrder","greenClr","blueClr","redClr","grayClr","Graph","history","state","setState","graphData","setgraphData","iKey","setiKey","makeDataForAlgo","x1data","apiFilterData","console","log","crrData","newData","forEach","item","item2","strCr","item3","checked","name","slice","push","xgenerateGraphData","colorClass","indexOf","data","gDataArr","i","j","x","y","prIdArr","newIdArr","Array","isArray","x1","y1","cpId","aItem","length","label","nodeData","parents","childrens","call","attributes","id","className","closeAction","includes","position","pId","source","target","arrowHeadType","key","splitStr","split","mainI","temArr","ci","downloadPdf","userDetails","userInfo","input","document","getElementById","scale","then","canvas","imgData","toDataURL","link","createElement","download","user","name_org","name_role_timestamp","href","click","downloadJson","map","node","isConnection","parent","find","n","child","use_case","children","participant_name","organisation_name","role_in_network","use_cases","encodeURIComponent","JSON","stringify","goBack","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, useMemo } from 'react';\nimport { Context } from '../Store';\nimport ReactFlow from 'react-flow-renderer';\nimport Button from '@material-ui/core/Button';\nimport { useHistory } from \"react-router-dom\";\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nimport InfoBox from '../component/InfoBox';\n\nconst orderby = [\"search\", \"on_search\", \"select\", \"on_select\", \"init\", \"on_init\", \"confirm\", \"on_confirm\", \"status\", \"on_status\", \"track\", \"on_track\", \"update\", \"on_update\", \"cancel\", \"on_cancel\", \"rating\", \"on_rating\", \"support\", \"on_support\"]\n\nconst newOrder = [\"search\", \"on_search\", \"select\", \"on_select\", \"init\", \"on_init\", \"confirm\", \"on_confirm\", [[\"status\", \"on_status\"], [\"track\", \"on_track\"], [\"update\", \"on_update\"], [\"cancel\", \"on_cancel\"], [\"rating\", \"on_rating\"], [\"support\", \"on_support\"]]]\n\nconst greenClr = [\"on_search\", \"search\"];\nconst blueClr = [\"select\", \"on_select\", \"init\", \"on_init\", \"confirm\", \"on_confirm\"];\nconst redClr = [\"status\", \"on_status\", \"track\", \"on_track\", \"update\", \"on_update\", \"cancel\", \"on_cancel\"];\nconst grayClr = [\"rating\", \"on_rating\", \"support\", \"on_support\"];\n\nexport default function Graph() {\n    let history = useHistory();\n    const [state, setState] = useContext(Context);\n    const [graphData, setgraphData] = useState([]);\n    const [iKey, setiKey] = useState(0);\n\n    useEffect(\n        () => {\n            setiKey(iKey + 1);\n        }, [graphData]\n    );\n\n    const makeDataForAlgo = (x1data = { ...state.apiFilterData }) => {\n        console.log(1, x1data);\n        var crrData = x1data\n        var newData = {};\n        orderby.forEach(item => {\n            newData[item] = [];\n            crrData[item].forEach(item2 => {\n                var strCr = ''\n                item2.forEach(item3 => {\n                    if (item3.checked) {\n                        strCr = strCr + item3.name + ','\n                    }\n                })\n                if (strCr !== '') {\n                    strCr = strCr.slice(0, -1);\n                    newData[item].push(strCr)\n                };\n            })\n        })\n        console.log(newData);\n        xgenerateGraphData(newData);\n        // setalgoData(newData);\n    }\n\n    useEffect(() => {\n        makeDataForAlgo();\n    }, []);\n\n\n    const colorClass = (item) => {\n        if (greenClr.indexOf(item) >= 0) {\n            return 'green-clr';\n        } else if (blueClr.indexOf(item) >= 0) {\n            return 'blue-clr';\n        } else if (redClr.indexOf(item) >= 0) {\n            return 'red-clr';\n        } else if (grayClr.indexOf(item) >= 0) {\n            return 'gray-clr';\n        }\n        return '';\n    }\n\n    const xgenerateGraphData = (data) => {\n        var gDataArr = [];\n        var i = 0;\n        var j = 0;\n        var x = 100;\n        var y = 5\n        var prIdArr = [];\n        var newIdArr = [];\n        for (const item of newOrder) {\n            if (Array.isArray(item)) {\n                var x1 = x;\n                var y1 = y + 250;\n                var cpId = [];\n                item.forEach(aItem => {\n                    if (data[aItem[0]].length > 0) {\n                        data[aItem[0]].forEach((label) => {\n                            i++;\n                            gDataArr.push({\n                                nodeData: {\n                                    parents: [],\n                                    childrens: [],\n                                    call: aItem[0],\n                                    attributes: [],\n                                    label:label,\n\n                                },\n                                id: `${i}`, className: colorClass(aItem[0]), data: {\n                                    label: <div><div className=\"label-head\"><b className='box-id-text'>{i}</b><b className='node-item'>{aItem[0]}</b><b className=\"close-end\" onClick={() => closeAction(aItem[0], label)}>X</b></div><div className=\"node-label\">{label}</div><div className=\"node-tag\"><div className=\"tag-box\">{item.includes('_') ? 'BPP' : 'BAP'}</div></div></div>,\n\n                                }, position: { x: x, y: y },\n                            });\n                            cpId.push(i);\n                            x += 300;\n                            if (prIdArr.length > 0) {\n                                prIdArr.forEach(pId => {\n                                    j++;\n                                    gDataArr.push({ id: 'e1-' + j, source: `${pId}`, target: `${i}`, arrowHeadType: 'arrow' })\n                                })\n                            }\n                        })\n                    }\n                    if (data[aItem[1]].length > 0) {\n                        data[aItem[1]].forEach((label) => {\n                            i++;\n                            gDataArr.push({\n                                id: `${i}`, nodeData: {\n                                    parents: [],\n                                    childrens: [],\n                                    call: aItem[1],\n                                    attributes: [],\n                                    label:label,\n                                }, className: colorClass(aItem[1]), data: {\n                                    label: <div><div className=\"label-head\"><b className='box-id-text'>{i}</b><b className='node-item'>{aItem[1]}</b> <b className=\"close-end\" onClick={() => closeAction(aItem[1], label)}>X</b></div><div className=\"node-label\">{label}</div><div className=\"node-tag\"><div className=\"tag-box\">{aItem[1].includes('_') ? 'BPP' : 'BAP'}</div></div></div>\n                                }, position: { x: x1, y: y1 },\n                            });\n                            x1 += 300;\n                            if (cpId.length > 0) {\n                                cpId.forEach(pId => {\n                                    j++;\n                                    gDataArr.push({ id: 'e1-' + j, source: `${pId}`, target: `${i}`, arrowHeadType: 'arrow' })\n                                })\n                            } else {\n                                prIdArr.forEach(pId => {\n                                    j++;\n                                    gDataArr.push({ id: 'e1-' + j, source: `${pId}`, target: `${i}`, arrowHeadType: 'arrow' })\n                                })\n                            }\n\n                        })\n                    }\n                    cpId = [];\n                })\n\n            }\n            else if (data[item].length > 0) {\n                // create nodes \n                // <b className=\"close-end\" onClick={() => closeAction(i)}>X</b>\n                newIdArr = [];\n                data[item].forEach((label) => {\n                    i++;\n                    gDataArr.push({\n                        id: `${i}`, nodeData: {\n                            parents: [],\n                            childrens: [],\n                            call: item,\n                            attributes: [],\n                            label:label,\n                        }, className: colorClass(item), data: { label: <div><div className=\"label-head\"><b className='box-id-text'>{i}</b><b className='node-item'>{item}</b><b className=\"close-end\" onClick={() => closeAction(item, label)}>X</b></div><div className=\"node-label\">{label}</div><div className=\"node-tag\"><div className=\"tag-box\">{item.includes('_') ? 'BPP' : 'BAP'}</div></div></div> }, position: { x: x, y: y }\n                    });\n                    newIdArr.push(i);\n                    x += 300;\n                    if (prIdArr.length > 0) {\n                        prIdArr.forEach(pId => {\n                            j++;\n                            gDataArr.push({ id: 'e1-' + j, source: `${pId}`, target: `${i}`, arrowHeadType: 'arrow' })\n                        })\n                    }\n                })\n                // match nodes \n                prIdArr = newIdArr;\n\n                x = 100;\n                y += 250;\n            }\n        }\n        setgraphData(gDataArr);\n    }\n\n    const closeAction = (key, label) => {\n        var splitStr = label.split(\",\");\n\n        for (let mainI = 0; mainI < state.apiFilterData[key].length; mainI++) {\n            var temArr = [];\n            splitStr.forEach(item2 => {\n                console.log(state.apiFilterData[key][mainI]);\n                for (let ci = 0; ci < state.apiFilterData[key][mainI].length; ci++) {\n                    if (item2 == state.apiFilterData[key][mainI][ci].name && state.apiFilterData[key][mainI][ci].checked) {\n                        temArr.push(ci);\n                        break;\n                    }\n                }\n            })\n            if (splitStr.length === temArr.length) {\n                temArr.forEach(i => {\n                    state.apiFilterData[key][mainI][i].checked = false;\n                })\n                break;\n            }\n        }\n\n\n        setState({ ...state, apiFilterData: { ...state.apiFilterData, [key]: state.apiFilterData[key] } });\n        makeDataForAlgo({ ...state.apiFilterData });\n\n    }\n\n    const downloadPdf = () => {\n        let userDetails = state.userInfo;\n        const input = document.getElementById('graph');\n        html2canvas(input, {\n            scale: 3\n        }).then((canvas) => {\n            const imgData = canvas.toDataURL('image/png');\n\n            var link = document.createElement('a');\n            link.download = userDetails.user + '_' + userDetails.name_org + '_' + userDetails.name_role_timestamp + '.png';\n            link.href = imgData\n            link.click();\n        })\n            ;\n    }\n\n    const downloadJson = () => {\n        let userDetails = state.userInfo;\n        let data = [...graphData];\n        data.map((node) => {\n            let isConnection = node.id.indexOf('e') !== -1;\n            if (isConnection) {\n                let parent = data.find((n) => {\n                    return n.id === node.source;\n                });\n                let child = data.find((n) => {\n                    return n.id === node.target;\n                });\n                child && child.nodeData.parents.push(parent.id)\n                parent && parent.nodeData.childrens.push(child.id)\n            }\n        })\n        let use_case = []\n        data.forEach(node => {\n            if (node.id.indexOf('e') === -1) {\n                use_case.push({\n                    id: node.id,\n                    call: node.nodeData.call,\n                    parents: node.nodeData.parents,\n                    children: node.nodeData.childrens,\n                    attributes: node.nodeData.label.split(','),\n                    label: node.nodeData.label\n\n                })\n            }\n        });\n        data={\n            participant_name:userDetails.user ,\n            organisation_name:userDetails.name_org,\n            role_in_network:userDetails.name_role_timestamp,\n            use_cases:use_case,\n        }\n        data = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(data));\n        var link = document.createElement('a');\n        link.download = userDetails.user + '_' + userDetails.name_org + '_' + userDetails.name_role_timestamp + '.json';\n        link.href = data;\n        link.click();\n    }\n\n    return (\n        <div>\n            <div className=\"button-container\">\n                <div className='color-codes'>\n                    <div className='c-padding'>\n                        <div className=\"color-bricks green-clr\"></div><div className=\"color-text\">Discovery APIs</div>\n                    </div>\n                    <div className='c-padding '>\n                        <div className=\"color-bricks blue-clr\"></div><div className=\"color-text\">Order APIs</div>\n                    </div>\n                    <div className='c-padding '>\n                        <div className=\"color-bricks red-clr\"></div><div className=\"color-text\">Fulfilment APIs</div>\n                    </div>\n                    <div className='c-padding '>\n                        <div className=\"color-bricks gray-clr\"></div><div className=\"color-text\">Post-Fulfilment APIs</div>\n                    </div>\n                </div>\n                <Button variant=\"outlined\" onClick={() => history.goBack()}>back</Button>\n                <Button variant=\"outlined\" style={{ marginLeft: '10px' }} onClick={() => history.push('/')}>home</Button>\n                <Button variant=\"outlined\" style={{ marginLeft: '10px' }} onClick={downloadPdf}>export image</Button>\n                <Button variant=\"outlined\" style={{ marginLeft: '10px' }} onClick={downloadJson}>export json</Button>\n                <div className=\"step-graph\">Step 22 of 22</div>\n            </div>\n\n            <div className=\"g-main\">\n                <div className='graph-info'>\n                    <InfoBox keyName='graph' />\n                </div>\n            </div>\n\n            <div id='graph' className=\"graph\">\n                <ReactFlow elements={graphData} />\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}