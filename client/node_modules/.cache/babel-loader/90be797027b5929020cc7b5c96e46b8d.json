{"ast":null,"code":"var _jsxFileName = \"/Users/tanyakemkar/Desktop/use-case-gen-frontend/src/pages/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button'; // import Chip from '@material-ui/core/Chip';\n\nimport ReactFlow from 'react-flow-renderer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 500,\n    maxWidth: 300\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  chip: {\n    margin: 2\n  },\n  noLabel: {\n    marginTop: theme.spacing(3)\n  }\n}));\nconst buttonStyle = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nconst names = ['Oliver Hansen', 'Van Henry', 'April Tucker', 'Ralph Hubbard', 'Omar Alexander', 'Carlos Abbott', 'Miriam Wagner', 'Bradley Wilkerson', 'Virginia Andrews', 'Kelly Snyder'];\nconst orderby = [\"search\", \"on_search\", \"select\", \"on_select\", \"init\", \"on_init\", \"confirm\", \"on_confirm\", \"status\", \"on_status\", \"track\", \"on_track\", \"update\", \"on_update\", \"cancel\", \"on_cancel\", \"rating\", \"on_rating\", \"support\", \"on_support\"];\nconst newOrder = [\"search\", \"on_search\", \"select\", \"on_select\", \"init\", \"on_init\", \"confirm\", \"on_confirm\", [[\"status\", \"on_status\"], [\"track\", \"on_track\"], [\"update\", \"on_update\"], [\"cancel\", \"on_cancel\"], [\"rating\", \"on_rating\"], [\"support\", \"on_support\"]]];\nconst greenClr = [\"on_search\", \"search\"];\nconst blueClr = [\"select\", \"on_select\", \"init\", \"on_init\", \"confirm\", \"on_confirm\"];\nconst redClr = [\"status\", \"on_status\", \"track\", \"on_track\", \"update\", \"on_update\", \"cancel\", \"on_cancel\"];\nconst grayClr = [\"rating\", \"on_rating\", \"support\", \"on_support\"];\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight: personName.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n  };\n}\n\nconst flowStyles = {\n  height: 200\n};\nexport default function HomePage() {\n  _s();\n\n  const [apiFilterData, setapiFilterData] = useState({});\n  const [checkedData, setcheckedData] = useState({});\n  const [generate, setgenerate] = useState(false);\n  const [graphData, setgraphData] = useState([]);\n  useEffect(() => {\n    getApiData();\n  }, []);\n  const elements = [{\n    id: '1',\n    data: {\n      label: 'Node 1'\n    },\n    position: {\n      x: 100,\n      y: 5\n    }\n  }, {\n    id: 'e1-2',\n    source: '1',\n    target: '2',\n    animated: true\n  }, {\n    id: '2',\n    data: {\n      label: 'Node 2 dasdas dasdasd dsaadasd dsadasd dasdas'\n    },\n    position: {\n      x: 100,\n      y: 100\n    }\n  }, {\n    id: '3',\n    data: {\n      label: 'Node 3'\n    },\n    position: {\n      x: 350,\n      y: 100\n    }\n  }, {\n    id: 'e1-3',\n    source: '2',\n    target: '4',\n    animated: true\n  }, {\n    id: '4',\n    data: {\n      label: 'Node 4'\n    },\n    position: {\n      x: 100,\n      y: 200\n    }\n  }, {\n    id: '5',\n    data: {\n      label: 'Node 5'\n    },\n    position: {\n      x: 450,\n      y: 200\n    }\n  }, {\n    id: 'e1-7',\n    source: '1',\n    target: '4',\n    animated: true\n  }, {\n    id: 'e1-4',\n    source: '2',\n    target: '5',\n    animated: true\n  }, {\n    id: 'e1-5',\n    source: '1',\n    target: '3',\n    animated: true\n  }, {\n    id: 'e1-6',\n    source: '3',\n    target: '5',\n    animated: true\n  }];\n  const classes = useStyles();\n  const [personName, setPersonName] = React.useState([]);\n\n  const handleChange = event => {\n    setcheckedData({ ...checkedData,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const getApiData = () => {\n    fetch('http://13.235.139.60:3000/action/').then(response => response.json()).then(data => groupBy(data));\n  };\n\n  const groupBy = list => {\n    const newData = {};\n    list.forEach(item => {\n      if (newData[item.api]) {\n        newData[item.api].push(item.label);\n      } else {\n        newData[item.api] = [item.label];\n        checkedData[item.api] = [];\n        setcheckedData(checkedData);\n      }\n    });\n    setapiFilterData(newData);\n    console.log(1, apiFilterData);\n    return newData;\n  };\n\n  const buttonAction = () => {\n    if (!generate) {\n      // generateGraphData();\n      xgenerateGraphData();\n    } else {\n      setgraphData([]);\n    }\n\n    setgenerate(!generate);\n  };\n\n  const validate = () => {\n    if (checkedData['confirm'].length > 0) {}\n\n    return true;\n  };\n\n  const generateGraphData = () => {\n    var gDataArr = [];\n    var i = 0;\n    var j = 0;\n    var x = 100;\n    var y = 5;\n    var prIdArr = [];\n    var newIdArr = [];\n\n    for (const item of orderby) {\n      if (checkedData[item].length > 0) {\n        // create nodes \n        newIdArr = [];\n        checkedData[item].forEach(label => {\n          i++;\n          gDataArr.push({\n            id: i,\n            data: {\n              label: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"label-head\",\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: item\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 92\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 64\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 111\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 59\n              }, this)\n            },\n            position: {\n              x: x,\n              y: y\n            }\n          });\n          newIdArr.push(i);\n          x += 300;\n        });\n        console.log(prIdArr, newIdArr); // match nodes \n\n        if (prIdArr.length === 0) {\n          prIdArr = newIdArr;\n        } else {\n          console.log(prIdArr, newIdArr);\n          prIdArr.forEach(pId => {\n            newIdArr.forEach(nId => {\n              j++;\n              gDataArr.push({\n                id: 'e1-' + j,\n                source: pId,\n                target: nId,\n                animated: true\n              });\n            });\n          });\n          prIdArr = newIdArr;\n        }\n\n        x = 100;\n        y += 150;\n      }\n    }\n\n    console.log(gDataArr);\n    setgraphData(gDataArr);\n  };\n\n  const xgenerateGraphData = () => {\n    var gDataArr = [];\n    var i = 0;\n    var j = 0;\n    var x = 100;\n    var y = 5;\n    var prIdArr = [];\n    var newIdArr = [];\n\n    for (const item of newOrder) {\n      if (Array.isArray(item)) {\n        var x1 = x;\n        var y1 = y + 200;\n        var cpId = [];\n        item.forEach(aItem => {\n          if (checkedData[aItem[0]].length > 0) {\n            checkedData[aItem[0]].forEach(label => {\n              i++;\n              gDataArr.push({\n                id: i,\n                className: colorClass(aItem[0]),\n                data: {\n                  label: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"label-head\",\n                      children: /*#__PURE__*/_jsxDEV(\"b\", {\n                        children: aItem[0]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 222,\n                        columnNumber: 77\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: label\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 48\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 44\n                  }, this)\n                },\n                position: {\n                  x: x,\n                  y: y\n                }\n              });\n              cpId.push(i);\n              x += 300;\n\n              if (prIdArr.length > 0) {\n                prIdArr.forEach(pId => {\n                  j++;\n                  gDataArr.push({\n                    id: 'e1-' + j,\n                    source: pId,\n                    target: i,\n                    arrowHeadType: 'arrow'\n                  });\n                });\n              }\n            });\n          }\n\n          if (checkedData[aItem[1]].length > 0) {\n            checkedData[aItem[1]].forEach(label => {\n              i++;\n              gDataArr.push({\n                id: i,\n                className: colorClass(aItem[1]),\n                data: {\n                  label: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"label-head\",\n                      children: /*#__PURE__*/_jsxDEV(\"b\", {\n                        children: aItem[1]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 241,\n                        columnNumber: 77\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: label\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 48\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 44\n                  }, this)\n                },\n                position: {\n                  x: x1,\n                  y: y1\n                }\n              });\n              x1 += 300;\n\n              if (cpId.length > 0) {\n                cpId.forEach(pId => {\n                  j++;\n                  gDataArr.push({\n                    id: 'e1-' + j,\n                    source: pId,\n                    target: i,\n                    arrowHeadType: 'arrow'\n                  });\n                });\n              } else {\n                prIdArr.forEach(pId => {\n                  j++;\n                  gDataArr.push({\n                    id: 'e1-' + j,\n                    source: pId,\n                    target: i,\n                    arrowHeadType: 'arrow'\n                  });\n                });\n              }\n            });\n          }\n\n          cpId = [];\n        });\n      } else if (checkedData[item].length > 0) {\n        // create nodes \n        newIdArr = [];\n        checkedData[item].forEach(label => {\n          i++;\n          gDataArr.push({\n            id: i,\n            className: colorClass(item),\n            data: {\n              label: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"label-head\",\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: item\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 121\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 93\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 140\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 88\n              }, this)\n            },\n            position: {\n              x: x,\n              y: y\n            }\n          });\n          newIdArr.push(i);\n          x += 300;\n\n          if (prIdArr.length > 0) {\n            prIdArr.forEach(pId => {\n              j++;\n              gDataArr.push({\n                id: 'e1-' + j,\n                source: pId,\n                target: i,\n                arrowHeadType: 'arrow'\n              });\n            });\n          }\n        }); // match nodes \n\n        prIdArr = newIdArr;\n        x = 100;\n        y += 150;\n      }\n    }\n\n    console.log(gDataArr);\n    setgraphData(gDataArr);\n  };\n\n  const colorClass = item => {\n    if (greenClr.indexOf(item) >= 0) {\n      return 'green-clr';\n    } else if (blueClr.indexOf(item) >= 0) {\n      return 'blue-clr';\n    } else if (redClr.indexOf(item) >= 0) {\n      return 'red-clr';\n    } else if (grayClr.indexOf(item) >= 0) {\n      return 'gray-clr';\n    }\n\n    return '';\n  };\n\n  const dropdowns = () => {\n    var allDrop = [];\n\n    for (const key of orderby) {\n      if (apiFilterData[key]) {\n        allDrop.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.formControl,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"demo-mutiple-checkbox-label\",\n              children: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"demo-mutiple-checkbox-label\",\n              id: \"demo-mutiple-checkbox\",\n              name: key,\n              multiple: true,\n              value: checkedData[key],\n              onChange: handleChange,\n              input: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 40\n              }, this),\n              renderValue: selected => selected.join(', '),\n              MenuProps: MenuProps,\n              children: apiFilterData[key].map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: name,\n                children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: checkedData[key].indexOf(name) > -1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 41\n                }, this)]\n              }, name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 25\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 21\n        }, this));\n      }\n    }\n\n    return allDrop;\n  };\n\n  const onSelectAll = () => {\n    setcheckedData({ ...apiFilterData\n    });\n  };\n\n  const onClearAll = () => {\n    orderby.forEach(item => {\n      checkedData[item] = [];\n    });\n    setcheckedData({ ...checkedData\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [generate ? \"\" : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"select-btns\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: onSelectAll,\n          children: \"Select All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: onClearAll,\n          children: \"clear all\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all-dropdown\",\n        children: dropdowns()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: buttonAction,\n        children: generate ? 'back' : 'Generate'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph\",\n      style: {\n        display: generate ? 'block' : 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        elements: graphData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 353,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HomePage, \"94HNewB68uA5uPV1/GDD9t2unBo=\", false, function () {\n  return [useStyles];\n});\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/tanyakemkar/Desktop/use-case-gen-frontend/src/pages/HomePage.js"],"names":["React","useState","useEffect","makeStyles","useTheme","Input","InputLabel","MenuItem","FormControl","ListItemText","Select","Checkbox","Button","ReactFlow","useStyles","theme","formControl","margin","spacing","minWidth","maxWidth","chips","display","flexWrap","chip","noLabel","marginTop","buttonStyle","root","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","names","orderby","newOrder","greenClr","blueClr","redClr","grayClr","getStyles","name","personName","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","flowStyles","height","HomePage","apiFilterData","setapiFilterData","checkedData","setcheckedData","generate","setgenerate","graphData","setgraphData","getApiData","elements","id","data","label","position","x","y","source","target","animated","classes","setPersonName","handleChange","event","value","fetch","then","response","json","groupBy","list","newData","forEach","item","api","push","console","log","buttonAction","xgenerateGraphData","validate","length","generateGraphData","gDataArr","i","j","prIdArr","newIdArr","pId","nId","Array","isArray","x1","y1","cpId","aItem","className","colorClass","arrowHeadType","dropdowns","allDrop","key","selected","join","map","onSelectAll","onClearAll"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\n// import Chip from '@material-ui/core/Chip';\nimport ReactFlow from 'react-flow-renderer';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 500,\n        maxWidth: 300,\n    },\n    chips: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: 2,\n    },\n    noLabel: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\n\nconst buttonStyle = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n}));\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\n\n\nconst names = [\n    'Oliver Hansen',\n    'Van Henry',\n    'April Tucker',\n    'Ralph Hubbard',\n    'Omar Alexander',\n    'Carlos Abbott',\n    'Miriam Wagner',\n    'Bradley Wilkerson',\n    'Virginia Andrews',\n    'Kelly Snyder',\n];\n\nconst orderby = [\"search\", \"on_search\", \"select\", \"on_select\", \"init\", \"on_init\", \"confirm\", \"on_confirm\", \"status\", \"on_status\", \"track\", \"on_track\", \"update\", \"on_update\", \"cancel\", \"on_cancel\", \"rating\", \"on_rating\", \"support\", \"on_support\"]\n\nconst newOrder = [\"search\", \"on_search\", \"select\", \"on_select\", \"init\", \"on_init\", \"confirm\", \"on_confirm\", [[\"status\", \"on_status\"], [\"track\", \"on_track\"], [\"update\", \"on_update\"], [\"cancel\", \"on_cancel\"], [\"rating\", \"on_rating\"], [\"support\", \"on_support\"]]]\n\nconst greenClr = [\"on_search\", \"search\"];\nconst blueClr = [\"select\", \"on_select\", \"init\", \"on_init\", \"confirm\", \"on_confirm\"];\nconst redClr = [\"status\", \"on_status\", \"track\", \"on_track\", \"update\", \"on_update\", \"cancel\", \"on_cancel\"];\nconst grayClr = [\"rating\", \"on_rating\", \"support\", \"on_support\"];\n\nfunction getStyles(name, personName, theme) {\n    return {\n        fontWeight:\n            personName.indexOf(name) === -1\n                ? theme.typography.fontWeightRegular\n                : theme.typography.fontWeightMedium,\n    };\n}\n\nconst flowStyles = { height: 200 };\n\nexport default function HomePage() {\n\n    const [apiFilterData, setapiFilterData] = useState({});\n    const [checkedData, setcheckedData] = useState({});\n    const [generate, setgenerate] = useState(false);\n    const [graphData, setgraphData] = useState([]);\n\n    useEffect(() => {\n        getApiData()\n\n\n    }, []);\n    const elements = [\n        { id: '1', data: { label: 'Node 1' }, position: { x: 100, y: 5 } },\n        { id: 'e1-2', source: '1', target: '2', animated: true },\n        { id: '2', data: { label: 'Node 2 dasdas dasdasd dsaadasd dsadasd dasdas' }, position: { x: 100, y: 100 } },\n        { id: '3', data: { label: 'Node 3' }, position: { x: 350, y: 100 } },\n        { id: 'e1-3', source: '2', target: '4', animated: true },\n        { id: '4', data: { label: 'Node 4' }, position: { x: 100, y: 200 } },\n        { id: '5', data: { label: 'Node 5' }, position: { x: 450, y: 200 } },\n        { id: 'e1-7', source: '1', target: '4', animated: true },\n        { id: 'e1-4', source: '2', target: '5', animated: true },\n        { id: 'e1-5', source: '1', target: '3', animated: true },\n        { id: 'e1-6', source: '3', target: '5', animated: true },\n    ];\n\n    const classes = useStyles();\n    const [personName, setPersonName] = React.useState([]);\n\n    const handleChange = (event) => {\n        setcheckedData({ ...checkedData, [event.target.name]: event.target.value });\n    };\n\n    const getApiData = () => {\n        fetch('http://13.235.139.60:3000/action/')\n            .then(response => response.json())\n            .then(data => groupBy(data));\n    }\n\n    const groupBy = (list) => {\n        const newData = {};\n        list.forEach((item) => {\n            if (newData[item.api]) {\n                newData[item.api].push(item.label);\n            } else {\n                newData[item.api] = [item.label];\n                checkedData[item.api] = [];\n                setcheckedData(checkedData);\n            }\n        });\n        setapiFilterData(newData);\n        console.log(1, apiFilterData);\n        return newData;\n    }\n\n    const buttonAction = () => {\n        if (!generate) {\n            // generateGraphData();\n            xgenerateGraphData();\n        } else {\n            setgraphData([]);\n        }\n        setgenerate(!generate);\n    }\n\n\n    const validate = () => {\n        if (checkedData['confirm'].length > 0) {\n\n        }\n        return true\n    }\n\n    const generateGraphData = () => {\n        var gDataArr = [];\n        var i = 0;\n        var j = 0;\n        var x = 100;\n        var y = 5\n        var prIdArr = [];\n        var newIdArr = [];\n        for (const item of orderby) {\n            if (checkedData[item].length > 0) {\n                // create nodes \n                newIdArr = [];\n                checkedData[item].forEach((label) => {\n                    i++;\n                    gDataArr.push({ id: i, data: { label: <div><div className=\"label-head\"><b>{item}</b></div><div>{label}</div></div> }, position: { x: x, y: y } });\n                    newIdArr.push(i);\n                    x += 300;\n                })\n                console.log(prIdArr, newIdArr);\n                // match nodes \n                if (prIdArr.length === 0) {\n                    prIdArr = newIdArr;\n                } else {\n                    console.log(prIdArr, newIdArr);\n                    prIdArr.forEach(pId => {\n                        newIdArr.forEach(nId => {\n                            j++;\n                            gDataArr.push({ id: 'e1-' + j, source: pId, target: nId, animated: true })\n                        })\n                    })\n                    prIdArr = newIdArr;\n                }\n                x = 100;\n                y += 150;\n            }\n        }\n\n        console.log(gDataArr);\n        setgraphData(gDataArr);\n\n    }\n\n    const xgenerateGraphData = () => {\n        var gDataArr = [];\n        var i = 0;\n        var j = 0;\n        var x = 100;\n        var y = 5\n        var prIdArr = [];\n        var newIdArr = [];\n        for (const item of newOrder) {\n            if (Array.isArray(item)) {\n                var x1 = x;\n                var y1 = y + 200;\n                var cpId = [];\n                item.forEach(aItem => {\n                    if (checkedData[aItem[0]].length > 0) {\n                        checkedData[aItem[0]].forEach((label) => {\n                            i++;\n                            gDataArr.push({\n                                id: i, className: colorClass(aItem[0]), data: {\n                                    label: <div><div className=\"label-head\"><b>{aItem[0]\n                                    }</b></div><div>{label}</div></div>\n                                }, position: { x: x, y: y }\n                            });\n                            cpId.push(i);\n                            x += 300;\n                            if (prIdArr.length > 0) {\n                                prIdArr.forEach(pId => {\n                                    j++;\n                                    gDataArr.push({ id: 'e1-' + j, source: pId, target: i, arrowHeadType: 'arrow' })\n                                })\n                            }\n                        })\n                    }\n                    if (checkedData[aItem[1]].length > 0) {\n                        checkedData[aItem[1]].forEach((label) => {\n                            i++;\n                            gDataArr.push({\n                                id: i, className: colorClass(aItem[1]), data: {\n                                    label: <div><div className=\"label-head\"><b>{aItem[1]\n                                    }</b></div><div>{label}</div></div>\n                                }, position: { x: x1, y: y1 }\n                            });\n                            x1 += 300;\n                            if (cpId.length > 0) {\n                                cpId.forEach(pId => {\n                                    j++;\n                                    gDataArr.push({ id: 'e1-' + j, source: pId, target: i, arrowHeadType: 'arrow' })\n                                })\n                            } else {\n                                prIdArr.forEach(pId => {\n                                    j++;\n                                    gDataArr.push({ id: 'e1-' + j, source: pId, target: i, arrowHeadType: 'arrow' })\n                                })\n                            }\n\n                        })\n                    }\n                    cpId = [];\n                })\n\n            }\n            else if (checkedData[item].length > 0) {\n                // create nodes \n                newIdArr = [];\n                checkedData[item].forEach((label) => {\n                    i++;\n                    gDataArr.push({ id: i, className: colorClass(item), data: { label: <div><div className=\"label-head\"><b>{item}</b></div><div>{label}</div></div> }, position: { x: x, y: y } });\n                    newIdArr.push(i);\n                    x += 300;\n                    if (prIdArr.length > 0) {\n                        prIdArr.forEach(pId => {\n                            j++;\n                            gDataArr.push({ id: 'e1-' + j, source: pId, target: i, arrowHeadType: 'arrow' })\n                        })\n                    }\n                })\n                // match nodes \n                prIdArr = newIdArr;\n\n                x = 100;\n                y += 150;\n            }\n        }\n\n        console.log(gDataArr);\n        setgraphData(gDataArr);\n\n    }\n\n    const colorClass = (item) => {\n        if (greenClr.indexOf(item) >= 0) {\n            return 'green-clr';\n        } else if (blueClr.indexOf(item) >= 0) {\n            return 'blue-clr';\n        } else if (redClr.indexOf(item) >= 0) {\n            return 'red-clr';\n        } else if (grayClr.indexOf(item) >= 0) {\n            return 'gray-clr';\n        }\n        return '';\n    }\n\n\n    const dropdowns = () => {\n        var allDrop = [];\n        for (const key of orderby) {\n            if (apiFilterData[key]) {\n                allDrop.push(\n                    <div className=\"dropdown\" key={key}>\n                        <FormControl className={classes.formControl}>\n                            <InputLabel id=\"demo-mutiple-checkbox-label\">{key}</InputLabel>\n                            <Select\n                                labelId=\"demo-mutiple-checkbox-label\"\n                                id=\"demo-mutiple-checkbox\"\n                                name={key}\n                                multiple\n                                value={checkedData[key]}\n                                onChange={handleChange}\n                                input={<Input />}\n                                renderValue={(selected) => selected.join(', ')}\n                                MenuProps={MenuProps}\n                            >\n                                {apiFilterData[key].map((name) => (\n                                    <MenuItem key={name} value={name}>\n                                        <Checkbox checked={checkedData[key].indexOf(name) > -1} />\n                                        <ListItemText primary={name} />\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                    </div>\n                )\n            }\n        }\n        return allDrop;\n    }\n\n    const onSelectAll = () => {\n        setcheckedData({ ...apiFilterData });\n    }\n\n    const onClearAll = () => {\n        orderby.forEach(item => {\n            checkedData[item] = [];\n        })\n        setcheckedData({ ...checkedData });\n    }\n\n\n    return (\n        <div>\n\n            {generate ? \"\" :\n                <div>\n                    <div className='select-btns'>\n                        <Button variant=\"outlined\" onClick={onSelectAll}>Select All</Button>\n                        <Button variant=\"outlined\" onClick={onClearAll}>clear all</Button>\n                    </div>\n                    <div className=\"all-dropdown\">\n                        {dropdowns()}\n                    </div>\n                </div>\n            }\n            <div className=\"button-container\">\n                <Button variant=\"outlined\" onClick={buttonAction}>{generate ? 'back' : 'Generate'}</Button>\n            </div>\n\n            <div className=\"graph\" style={{ display: generate ? 'block' : 'none' }}>\n                <ReactFlow elements={graphData} />\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}