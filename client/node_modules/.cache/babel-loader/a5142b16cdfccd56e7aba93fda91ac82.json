{"ast":null,"code":"const ConstantData = {\n  urlPath: {\n    search: {\n      curr: 'search',\n      next: 'onsearch',\n      nextName: 'on_search'\n    },\n    on_search: {\n      curr: 'onsearch',\n      next: 'select',\n      nextName: 'select'\n    },\n    select: {\n      curr: 'select',\n      next: 'onselect',\n      nextName: 'on_select'\n    },\n    on_select: {\n      curr: 'onselect',\n      next: 'init',\n      nextName: 'init'\n    },\n    init: {\n      curr: 'init',\n      next: 'oninit',\n      nextName: 'on_init'\n    },\n    on_init: {\n      curr: 'oninit',\n      next: 'confirm',\n      nextName: 'confirm'\n    },\n    confirm: {\n      curr: 'confirm',\n      next: 'onconfirm',\n      nextName: 'on_confirm'\n    },\n    on_confirm: {\n      curr: 'onconfirm',\n      next: 'status',\n      nextName: 'status'\n    },\n    status: {\n      curr: 'status',\n      next: 'onstatus',\n      nextName: 'on_status'\n    },\n    on_status: {\n      curr: 'onstatus',\n      next: 'track',\n      nextName: 'track'\n    },\n    track: {\n      curr: 'track',\n      next: 'ontrack',\n      nextName: 'on_track'\n    },\n    on_track: {\n      curr: 'ontrack',\n      next: 'update',\n      nextName: 'update'\n    },\n    update: {\n      curr: 'update',\n      next: 'onupdate',\n      nextName: 'on_update'\n    },\n    on_update: {\n      curr: 'onupdate',\n      next: 'cancel',\n      nextName: 'cancel'\n    },\n    cancel: {\n      curr: 'cancel',\n      next: 'oncancel',\n      nextName: 'on_cancel'\n    },\n    on_cancel: {\n      curr: 'oncancel',\n      next: 'rating',\n      nextName: 'rating'\n    },\n    rating: {\n      curr: 'rating',\n      next: 'onrating',\n      nextName: 'on_rating'\n    },\n    on_rating: {\n      curr: 'onrating',\n      next: 'support',\n      nextName: 'support'\n    },\n    support: {\n      curr: 'support',\n      next: 'onsupport',\n      nextName: 'on_support'\n    },\n    on_support: {\n      curr: 'onsupport',\n      next: 'graph'\n    }\n  },\n  info: {\n    home: {\n      head: 'Basic Information',\n      list: ['Please provide information about your organisation and role in the network', 'This form is to be completed by the participants involved in the Retail Domain']\n    },\n    search: {\n      head: 'Use Cases for search',\n      list: ['The Search API allows buyers to discover catalogs published by the providers on the network.', 'BAP: select choices that you would enable to search for catalogs', 'BPP: select choices that you want BAP to enable to search for catalogs', 'Use case limit = 3 | Use cases can contain multiple parameters']\n    },\n    on_search: {\n      head: 'Use Cases for on_search',\n      list: ['The on_search API allows sellers to respond to a search call with a catalog matching the search query', 'BAP: select choices that you want BPP to enable to view catalogs', 'BPP: select choices that you would enable to publish catalogs', 'Use case limit = 3 | Use cases can contain multiple parameters']\n    },\n    select: {\n      head: 'Use Cases for select',\n      list: ['The select API allows buyers to build a cart with items of their choice from the catalog received in the on_search response.', 'BAP: select choices that you would enable to be added to cart', 'BPP: select choices that you want BAP to enable to be added to cart', 'Use case limit = 3 | Use cases may contain multiple parameters']\n    },\n    on_select: {\n      head: 'Use case for on_select',\n      list: ['The on_select API allows seller to calculate and provide a quote for the items added in the buyers cart', 'BAP: select choices that you want BPP to enable to view in a quote', 'BPP: select choices that you would enable to provide in a quote', 'Use case limit = 3 | Use cases may contain multiple parameters']\n    },\n    init: {\n      head: 'Use case for init',\n      list: ['The init API allows the buyer to send the details that would be used to generate an invoice for the order', 'BAP: select choices that you would enable for an invoice', 'BPP: select choices that you want BAP to enable for an invoice', 'Use case limit = 3 | Use cases may contain multiple parameters']\n    },\n    on_init: {\n      head: 'Use case for on_init',\n      list: ['The on_init API allows the seller to transmit the updated quote, payment terms and various policies that relate to the order', 'BAP: select choices that you want BPP to enable to receive as policies', 'BPP: select choices that you would enable to send as policies', 'Use case limit = 3 | Use cases may contain multiple parameters']\n    },\n    confirm: {\n      head: 'Use cases for Confirm',\n      list: ['The confirm API allows the buyer to select and proceed with the preferred mode of payment and create an order.', 'BAP: select choices that you would enable to confirm order', 'BPP: select choices that you want BAP to enable to confirm order', 'Use case limit = 3 | Use cases may contain multiple parameters']\n    },\n    on_confirm: {\n      head: 'Use cases for on_confirm',\n      list: ['The on_confirm API allows the seller to validate the payment (or promise of payment) and confirm the order, hence creating a commercial consideration.', 'BAP: select choices that you want BPP to enable to view confirmed order', 'BPP: select choices that you would enable to send confirmed order', 'Use case limit = 3 | Use cases may contain multiple parameters']\n    },\n    status: {\n      head: 'Use cases for Status',\n      list: ['The status API allows the buyer to determine the latest fulfilment status of an order', 'BAP: select choices that you would enable to check order status', 'BPP: select choices that you want BAP to enable to check order status', 'Use case limit = 3 | Use cases may contain multiple parameters']\n    },\n    on_status: {\n      head: 'Use cases for on_status',\n      list: ['The on_status API allows the seller to return the latest fulfilment status of an order', 'BAP: select choices that you want BPP to enable to view order status', 'BPP: select choices that you would enable to send order status', 'Use case limit = 3 | Use cases may contain multiple parameters']\n    },\n    track: {\n      head: 'Use case for track',\n      list: ['The track API allows the buyer to identify the current location of the package when it is being delivered', 'BAP: select choices that you would enable to track package', 'BPP: select choices that you want BAP to enable to track package', 'Use case limit = 3 | Use cases may contain multiple parameters']\n    },\n    on_track: {\n      head: 'Use cases for on_track',\n      list: ['The on_track API allows the seller to provide information on the latest location of the package when it is being delivered', 'BAP: select choices that you want BPP to enable to view tracking details', 'BPP: select choices that you would enable to send tracking details', 'Use case limit = 3 | Use cases may contain multiple parameters']\n    },\n    update: {\n      head: 'Use cases for update',\n      list: ['The update API allows the buyer to make modifications to an active order, subject to the order policies of the seller', 'BAP: select choices that you would enable to update an order', 'BPP: select choices that you want BAP to enable to update an order', 'Use case limit = 3 | Use cases may contain multiple parameters']\n    },\n    on_update: {\n      head: 'Use cases for on_update',\n      list: ['The on_update API allows the seller to accept the modifications to the order and respond back with updated order as well as additional payment terms, where required', 'BAP: select choices that you want BPP to enable to view updated order and terms', 'BPP: select choices that you would enable to send updated order and terms', 'Use case limit = 3 | Use cases may contain multiple parameters']\n    },\n    cancel: {\n      head: 'Use cases for cancel',\n      list: ['The cancel API allows the buyer to cancel an active order, subject to the cancellation policies of the seller', 'BAP: select choices that you would enable to cancel an order', 'BPP: select choices that you want BAP to enable to cancel an order', 'Use case limit = 3 | Use cases may contain multiple parameters']\n    },\n    on_cancel: {\n      head: 'Use cases for on_cancel',\n      list: ['The on_cancel API allows the seller to accept the cancellation of an order and respond back with the cancellation terms if required.', 'BAP: select choices that you want BPP to enable to view a cancelled order', 'BPP: select choices that you would enable to send a cancelled order', 'Use case limit = 3 | Use cases may contain multiple parameters']\n    },\n    rating: {\n      head: 'Use cases for Rating',\n      list: ['The rating API allows a buyer to rate various entities of a completed order', 'BAP: select choices that you would enable to provide a rating', 'BPP: select choices that you want BAP to enable to provide a rating', 'Use case limit = 3 | Use cases may contain multiple parameters']\n    },\n    on_rating: {\n      head: 'Use cases for on_rating',\n      list: ['The on_rating API allows sellers to respond to the ratings received from a buyer', 'BAP: select choices that you want BPP to enable to view response to submitted ratings', 'BPP: select choices that you would enable to send response to submitted rating', 'Use case limit = 3 | Use cases may contain multiple parameters']\n    },\n    support: {\n      head: 'Use cases for Support',\n      list: ['The support API allows a buyer to request for a means to connect with the seller (or seller platform) in order to clarify queries or raise issues with a specific order', 'BAP: select choices that you would enable to initiate a support request', 'BPP: select choices that you want BAP to enable to initiate a support request', 'Use case limit = 3 | Use cases may contain multiple parameters']\n    },\n    on_support: {\n      head: 'Use cases for on_support',\n      list: ['The on_support API allows a seller to respond with the relevant information to connect with the buyer', 'BAP: select choices that you want BPP to enable to respond to a support request', 'BPP: select choices that you would enable to respond to a support request', 'Use case limit = 3 | Use cases may contain multiple parameters']\n    },\n    graph: {\n      head: 'Graphical representation of the transaction Flows',\n      list: ['Based on your selections, the possible transaction flows are depicted below', 'Click on (x) to remove a particular node in the transaction flow', 'Export the final flows using the options provided (Export Image, Export JSON).', 'Share a copy of both exported files to ondc@qcin.org']\n    }\n  }\n};\nexport default ConstantData;","map":{"version":3,"sources":["/Users/tanyakemkar/Desktop/use-case-gen-frontend/client/src/ConstantData.js"],"names":["ConstantData","urlPath","search","curr","next","nextName","on_search","select","on_select","init","on_init","confirm","on_confirm","status","on_status","track","on_track","update","on_update","cancel","on_cancel","rating","on_rating","support","on_support","info","home","head","list","graph"],"mappings":"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","sourcesContent":["const ConstantData = {\n    urlPath: {\n        search: { curr: 'search', next: 'onsearch', nextName: 'on_search' },\n        on_search: { curr: 'onsearch', next: 'select', nextName: 'select' },\n        select: { curr: 'select', next: 'onselect', nextName: 'on_select' },\n        on_select: { curr: 'onselect', next: 'init', nextName: 'init' },\n        init: { curr: 'init', next: 'oninit', nextName: 'on_init' },\n        on_init: { curr: 'oninit', next: 'confirm', nextName: 'confirm' },\n        confirm: { curr: 'confirm', next: 'onconfirm', nextName: 'on_confirm' },\n        on_confirm: { curr: 'onconfirm', next: 'status', nextName: 'status' },\n        status: { curr: 'status', next: 'onstatus', nextName: 'on_status' },\n        on_status: { curr: 'onstatus', next: 'track', nextName: 'track' },\n        track: { curr: 'track', next: 'ontrack', nextName: 'on_track' },\n        on_track: { curr: 'ontrack', next: 'update', nextName: 'update' },\n        update: { curr: 'update', next: 'onupdate', nextName: 'on_update' },\n        on_update: { curr: 'onupdate', next: 'cancel', nextName: 'cancel' },\n        cancel: { curr: 'cancel', next: 'oncancel', nextName: 'on_cancel' },\n        on_cancel: { curr: 'oncancel', next: 'rating', nextName: 'rating' },\n        rating: { curr: 'rating', next: 'onrating', nextName: 'on_rating' },\n        on_rating: { curr: 'onrating', next: 'support', nextName: 'support' },\n        support: { curr: 'support', next: 'onsupport', nextName: 'on_support' },\n        on_support: { curr: 'onsupport', next: 'graph' }\n    },\n    info: {\n        home: {\n            head: 'Basic Information',\n            list: [\n                'Please provide information about your organisation and role in the network',\n                'This form is to be completed by the participants involved in the Retail Domain',\n            ]\n        },\n        search: {\n            head: 'Use Cases for search',\n            list: [\n                'The Search API allows buyers to discover catalogs published by the providers on the network.',\n                'BAP: select choices that you would enable to search for catalogs',\n                'BPP: select choices that you want BAP to enable to search for catalogs',\n                'Use case limit = 3 | Use cases can contain multiple parameters',\n            ]\n        },\n        on_search: {\n            head: 'Use Cases for on_search',\n            list: [\n                'The on_search API allows sellers to respond to a search call with a catalog matching the search query',\n                'BAP: select choices that you want BPP to enable to view catalogs',\n                'BPP: select choices that you would enable to publish catalogs',\n                'Use case limit = 3 | Use cases can contain multiple parameters',\n            ]\n        },\n        select: {\n            head: 'Use Cases for select',\n            list: [\n                'The select API allows buyers to build a cart with items of their choice from the catalog received in the on_search response.',\n                'BAP: select choices that you would enable to be added to cart',\n                'BPP: select choices that you want BAP to enable to be added to cart',\n                'Use case limit = 3 | Use cases may contain multiple parameters',\n            ]\n        },\n        on_select: {\n            head: 'Use case for on_select',\n            list: [\n                'The on_select API allows seller to calculate and provide a quote for the items added in the buyers cart',\n                'BAP: select choices that you want BPP to enable to view in a quote',\n                'BPP: select choices that you would enable to provide in a quote',\n                'Use case limit = 3 | Use cases may contain multiple parameters',\n            ]\n        },\n        init: {\n            head: 'Use case for init',\n            list: [\n                'The init API allows the buyer to send the details that would be used to generate an invoice for the order',\n                'BAP: select choices that you would enable for an invoice',\n                'BPP: select choices that you want BAP to enable for an invoice',\n                'Use case limit = 3 | Use cases may contain multiple parameters',\n            ]\n        },\n        on_init: {\n            head: 'Use case for on_init',\n            list: [\n                'The on_init API allows the seller to transmit the updated quote, payment terms and various policies that relate to the order',\n                'BAP: select choices that you want BPP to enable to receive as policies',\n                'BPP: select choices that you would enable to send as policies',\n                'Use case limit = 3 | Use cases may contain multiple parameters',\n            ]\n        },\n        confirm: {\n            head: 'Use cases for Confirm',\n            list: [\n                'The confirm API allows the buyer to select and proceed with the preferred mode of payment and create an order.',\n                'BAP: select choices that you would enable to confirm order',\n                'BPP: select choices that you want BAP to enable to confirm order',\n                'Use case limit = 3 | Use cases may contain multiple parameters',\n            ]\n        },\n        on_confirm: {\n            head: 'Use cases for on_confirm',\n            list: [\n                'The on_confirm API allows the seller to validate the payment (or promise of payment) and confirm the order, hence creating a commercial consideration.',\n                'BAP: select choices that you want BPP to enable to view confirmed order',\n                'BPP: select choices that you would enable to send confirmed order',\n                'Use case limit = 3 | Use cases may contain multiple parameters',\n            ]\n        },\n        status: {\n            head: 'Use cases for Status',\n            list: [\n                'The status API allows the buyer to determine the latest fulfilment status of an order',\n                'BAP: select choices that you would enable to check order status',\n                'BPP: select choices that you want BAP to enable to check order status',\n                'Use case limit = 3 | Use cases may contain multiple parameters',\n            ]\n        },\n        on_status: {\n            head: 'Use cases for on_status',\n            list: [\n                'The on_status API allows the seller to return the latest fulfilment status of an order',\n                'BAP: select choices that you want BPP to enable to view order status',\n                'BPP: select choices that you would enable to send order status',\n                'Use case limit = 3 | Use cases may contain multiple parameters',\n            ]\n        },\n        track: {\n            head: 'Use case for track',\n            list: [\n                'The track API allows the buyer to identify the current location of the package when it is being delivered',\n                'BAP: select choices that you would enable to track package',\n                'BPP: select choices that you want BAP to enable to track package',\n                'Use case limit = 3 | Use cases may contain multiple parameters',\n            ]\n        },\n        on_track: {\n            head: 'Use cases for on_track',\n            list: [\n                'The on_track API allows the seller to provide information on the latest location of the package when it is being delivered',\n                'BAP: select choices that you want BPP to enable to view tracking details',\n                'BPP: select choices that you would enable to send tracking details',\n                'Use case limit = 3 | Use cases may contain multiple parameters',\n            ]\n        },\n        update: {\n            head: 'Use cases for update',\n            list: [\n                'The update API allows the buyer to make modifications to an active order, subject to the order policies of the seller',\n                'BAP: select choices that you would enable to update an order',\n                'BPP: select choices that you want BAP to enable to update an order',\n                'Use case limit = 3 | Use cases may contain multiple parameters',\n            ]\n        },\n        on_update: {\n            head: 'Use cases for on_update',\n            list: [\n                'The on_update API allows the seller to accept the modifications to the order and respond back with updated order as well as additional payment terms, where required',\n                'BAP: select choices that you want BPP to enable to view updated order and terms',\n                'BPP: select choices that you would enable to send updated order and terms',\n                'Use case limit = 3 | Use cases may contain multiple parameters',\n            ]\n        },\n        cancel: {\n            head: 'Use cases for cancel',\n            list: [\n                'The cancel API allows the buyer to cancel an active order, subject to the cancellation policies of the seller',\n                'BAP: select choices that you would enable to cancel an order',\n                'BPP: select choices that you want BAP to enable to cancel an order',\n                'Use case limit = 3 | Use cases may contain multiple parameters',\n            ]\n        },\n        on_cancel: {\n            head: 'Use cases for on_cancel',\n            list: [\n                'The on_cancel API allows the seller to accept the cancellation of an order and respond back with the cancellation terms if required.',\n                'BAP: select choices that you want BPP to enable to view a cancelled order',\n                'BPP: select choices that you would enable to send a cancelled order',\n                'Use case limit = 3 | Use cases may contain multiple parameters',\n            ]\n        },\n        rating: {\n            head: 'Use cases for Rating',\n            list: [\n                'The rating API allows a buyer to rate various entities of a completed order',\n                'BAP: select choices that you would enable to provide a rating',\n                'BPP: select choices that you want BAP to enable to provide a rating',\n                'Use case limit = 3 | Use cases may contain multiple parameters',\n            ]\n        },\n        on_rating: {\n            head: 'Use cases for on_rating',\n            list: [\n                'The on_rating API allows sellers to respond to the ratings received from a buyer',\n                'BAP: select choices that you want BPP to enable to view response to submitted ratings',\n                'BPP: select choices that you would enable to send response to submitted rating',\n                'Use case limit = 3 | Use cases may contain multiple parameters',\n            ]\n        },\n        support: {\n            head: 'Use cases for Support',\n            list: [\n                'The support API allows a buyer to request for a means to connect with the seller (or seller platform) in order to clarify queries or raise issues with a specific order',\n                'BAP: select choices that you would enable to initiate a support request',\n                'BPP: select choices that you want BAP to enable to initiate a support request',\n                'Use case limit = 3 | Use cases may contain multiple parameters',\n            ]\n        },\n        on_support: {\n            head: 'Use cases for on_support',\n            list: [\n                'The on_support API allows a seller to respond with the relevant information to connect with the buyer',\n                'BAP: select choices that you want BPP to enable to respond to a support request',\n                'BPP: select choices that you would enable to respond to a support request',\n                'Use case limit = 3 | Use cases may contain multiple parameters',\n            ]\n        },\n        graph: {\n            head: 'Graphical representation of the transaction Flows',\n            list: [\n                'Based on your selections, the possible transaction flows are depicted below',\n                'Click on (x) to remove a particular node in the transaction flow',\n                'Export the final flows using the options provided (Export Image, Export JSON).',\n                'Share a copy of both exported files to ondc@qcin.org'\n            ]\n        }\n\n\n    }\n\n}\n\nexport default ConstantData;"]},"metadata":{},"sourceType":"module"}